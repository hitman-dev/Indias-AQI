import streamlit as st
import pandas as pd
import datetime
from datetime import timedelta
import plotly.express as px
import pydeck as pdk
from pydeck import View
from pycaret.regression import load_model, predict_model

# streamlit run C:/Users/Siddhant/PycharmProjects/Projects/aqi_streamlit/app.py --server.address=127.0.0.1

st.set_page_config(layout="wide")


@st.cache(allow_output_mutation=True)
def load_table(path):
    return pd.read_parquet(path)


####################################
### Functions
########################################
def get_AQI_bucket(x):
    if x <= 50:
        return "GOOD"
    elif x <= 100:
        return "SATISFACTORY"
    elif x <= 200:
        return "MODERATE"
    elif x <= 300:
        return "POOR"
    elif x <= 400:
        return "VERY POOR"
    else:
        return "SEVERE"


def get_image(x):
    if x <= 50:
        return "😃"
    elif x <= 100:
        return "🙂"
    elif x <= 200:
        return "😑"
    elif x <= 300:
        return "🙁"
    elif x <= 400:
        return "😠"
    else:
        return "😷"


def get_length(bucket):
    if bucket == "GOOD":
        return 43
    elif bucket == "SATISFACTORY":
        return 86
    elif bucket == "MODERATE":
        return 129
    elif bucket == "POOR":
        return 172
    elif bucket == "VERY POOR":
        return 205
    else:
        return 245


def get_icon(bucket):
    if bucket == "GOOD":
        return """
                <svg width="100" height="100" viewBox="0 0 50 50">
                    <g fill="none">
                        <path d="M0 48L48 48 48 0 0 0z"/>
                        <g fill="#85EF47">
                            <path d="M15.614 29.612c.52.15.999.223 1.465.223.466 0 .945-.073 1.465-.223.233-.067.368-.311.3-.545-.033-.114-.108-.208-.213-.265-.1-.055-.218-.068-.33-.035-.878.253-1.563.254-2.442 0-.111-.034-.23-.02-.333.036-.104.057-.18.15-.213.264-.032.114-.019.232.037.335.057.103.15.177.264.21" transform="translate(6.947 1.263)"/>
                            <path d="M33.228 23.199c-.238-.17-.518-.257-.82-.257l-.062.001c.368-1.782.624-3.561.762-5.289.383-4.808-.867-8.922-3.617-11.896C26.559 2.586 22.025.767 17.052.767c-1.246 0-2.36.122-2.997.239-.284-.15-.518-.285-.733-.425L13.27.547c-.113-.076-.267-.045-.346.069l-.334.49c-.038.055-.053.125-.04.193.014.067.054.125.11.161l.053.034c.862.566 1.803.991 2.582 1.166.855.193 1.28.606 1.457.835l.032.04c.074.096.203.125.316.07l.531-.278c.064-.034.11-.094.128-.165.016-.072.002-.146-.041-.205l-.042-.059c-.15-.209-.564-.698-1.353-1.046.273-.011.555-.019.73-.019 4.68 0 8.927 1.694 11.654 4.648 2.579 2.794 3.701 6.524 3.337 11.088-.157 1.966-.475 4.01-.944 6.081l-.05.271c-.018.092.006.186.066.258.059.072.15.115.243.115h.361c.07 0 .135-.023.193-.067l.057-.044c.22-.168.495-.218.641-.113.315.222.313 1.023-.004 1.992l-.363 1.114c-.187.578-.38 1.176-.62 1.886-.358 1.064-1 1.786-1.731 1.959l.014-.035.021-.049c.041-.094.082-.19.123-.29.029-.077.027-.164-.005-.24-.033-.075-.096-.137-.174-.168l-.41-.16c-.16-.06-.342.02-.405.176-1.77 4.445-3.984 7.807-6.97 10.58-1.61 1.496-3.177 1.803-5.035 1.803s-3.425-.307-5.036-1.804c-2.985-2.773-5.2-6.135-6.97-10.579-.063-.159-.241-.235-.407-.176l-.408.16c-.077.031-.14.093-.173.168-.033.076-.034.164-.003.242.043.109.088.214.134.319l.02.048c-.739-.174-1.366-.881-1.729-1.954-.252-.746-.459-1.39-.625-1.907l-.356-1.095c-.318-.968-.32-1.769-.005-1.991.153-.107.418-.056.664.13l.068.044c.056.034.126.054.186.047.154-.018.59-.06.617-.067.367-.09.728-.41.989-.873.414-.734.708-1.799 1.05-3.034.68-2.47 1.53-5.543 3.728-6.928 2.467-1.555 4.597-1.28 7.064-.962 2.379.306 5.072.653 8.572-.566l.03.02c.266 1.903 1.466 4.403 4.046 5.747.216.108.48.025.592-.187.055-.104.065-.223.03-.336-.035-.112-.112-.203-.217-.257-2.373-1.237-3.417-3.535-3.602-5.273-.014-.132-.09-.253-.202-.325l-.386-.246c-.117-.073-.256-.09-.385-.042-3.406 1.234-6.047.893-8.377.591-2.522-.323-4.905-.627-7.634 1.092-2.486 1.567-3.385 4.822-4.107 7.438-.325 1.178-.606 2.195-.968 2.836-.121.215-.242.33-.322.389-.428-1.95-.72-3.88-.869-5.738-.74-9.28 4.831-13.022 8.22-14.426l.019-.009c.414.18.802.312 1.155.392.855.192 1.28.605 1.457.835l.032.04c.073.095.204.124.315.07l.532-.278c.064-.035.11-.095.127-.165s.003-.145-.04-.206l-.042-.059c-.214-.297-.85-1.019-2.14-1.31-.653-.147-1.46-.514-2.214-1.007l-.052-.034c-.115-.075-.267-.046-.346.07l-.334.49c-.038.055-.053.124-.04.193.014.066.054.125.11.162l.053.033c.077.05.157.1.238.147C3.4 5.218.446 10.732.998 17.655c.136 1.711.392 3.49.762 5.288-.318-.01-.628.075-.882.255-.437.309-1.068 1.135-.393 3.195l.353 1.089c.19.589.387 1.197.63 1.92.68 2.01 2.044 2.727 3.095 2.727.038 0 .077-.003.118-.007 1.734 3.898 3.834 6.916 6.609 9.494 1.974 1.836 3.936 2.09 5.762 2.09 1.826 0 3.788-.254 5.763-2.09 2.775-2.578 4.876-5.596 6.609-9.494.04.004.08.007.119.007 1.05 0 2.415-.717 3.093-2.728.263-.779.474-1.431.651-1.982l.332-1.024c.677-2.062.046-2.888-.391-3.196" transform="translate(6.947 1.263)"/>
                            <path d="M24.142 23.38c0-.55-.718-.998-1.6-.998-.88 0-1.597.447-1.597.998 0 .559.701.997 1.598.997.881 0 1.599-.447 1.599-.997M11.54 24.377c.882 0 1.6-.447 1.6-.997s-.718-.998-1.6-.998c-.882 0-1.599.447-1.599.998 0 .56.703.997 1.599.997M13.567 34.376h6.972c-.406.974-1.378 2.505-3.486 2.505-2.11 0-3.081-1.53-3.486-2.505m3.486 3.384c2.559 0 4.017-1.913 4.528-3.703.038-.132.011-.276-.072-.386-.083-.11-.214-.175-.35-.175h-8.211c-.138 0-.27.065-.352.175-.082.11-.109.254-.072.386.511 1.79 1.97 3.703 4.529 3.703M25.053 21.01c.044-.109.043-.228-.002-.336-.045-.109-.13-.193-.24-.237-.499-.202-1.297-.442-2.263-.442-.97 0-1.77.243-2.272.447-.225.09-.334.347-.243.572.068.167.227.275.407.275.059 0 .115-.011.165-.033.432-.174 1.119-.382 1.943-.382.827 0 1.508.206 1.934.378.222.09.48-.02.571-.243M13.478 21.256c.052.022.108.033.166.033.18 0 .34-.108.407-.275.044-.109.043-.228-.003-.336-.046-.108-.13-.192-.24-.237-.501-.203-1.303-.447-2.272-.447-.965 0-1.763.24-2.263.443-.11.044-.194.128-.24.236-.045.108-.047.228-.002.336.087.222.344.332.572.243.427-.172 1.11-.378 1.933-.378.826 0 1.511.208 1.942.382" transform="translate(6.947 1.263)"/>
                        </g>
                    </g>
                </svg>"""
    elif bucket == "SATISFACTORY":
        return """
                <svg width="100" height="100" viewBox="0 0 50 50">
                    <g fill="none">
                        <path d="M0 48L48 48 48 0 0 0z" />
                        <g fill="#00BD56">
                            <path
                                d="M17.08 29.835c.465 0 .944-.073 1.463-.223.234-.067.368-.312.301-.545-.032-.114-.108-.208-.212-.265-.1-.056-.219-.068-.33-.035-.88.253-1.565.253-2.444 0-.11-.034-.228-.021-.332.036-.105.057-.18.151-.213.265-.067.232.068.477.302.544.519.15.998.223 1.464.223"
                                transform="translate(6.947 1.263)" />
                            <path
                                d="M33.228 23.199c-.254-.181-.563-.271-.882-.256.368-1.782.624-3.56.762-5.289.383-4.808-.867-8.922-3.617-11.896C26.559 2.586 22.025.767 17.053.767c-1.247 0-2.362.122-2.998.239-.282-.148-.516-.283-.733-.425L13.27.546c-.113-.074-.268-.044-.346.07l-.334.49c-.039.056-.054.126-.039.192.013.067.053.126.11.162l.052.034c.862.566 1.803.991 2.58 1.166.858.194 1.282.606 1.459.835l.033.042c.075.095.2.122.314.068l.532-.278c.064-.034.11-.094.127-.164s.003-.145-.04-.206l-.042-.059c-.15-.209-.564-.698-1.353-1.046.274-.011.555-.019.73-.019 4.68 0 8.927 1.694 11.654 4.648 2.579 2.794 3.701 6.524 3.337 11.088-.157 1.966-.475 4.01-.944 6.081l-.05.271c-.018.092.006.186.066.258.059.072.15.115.243.115h.361c.07 0 .135-.023.193-.067l.057-.044c.22-.168.493-.218.641-.113.315.222.313 1.023-.004 1.992l-.363 1.114c-.187.578-.38 1.176-.62 1.886-.358 1.064-1 1.786-1.731 1.959l.014-.035.021-.049c.041-.094.082-.19.123-.29.029-.077.027-.164-.005-.24-.033-.075-.096-.137-.174-.168l-.41-.16c-.16-.06-.342.02-.405.176-1.77 4.445-3.984 7.807-6.97 10.58-1.61 1.496-3.177 1.803-5.035 1.803s-3.425-.307-5.036-1.804c-2.985-2.772-5.198-6.134-6.97-10.578-.063-.161-.243-.238-.406-.177l-.409.16c-.077.031-.14.093-.173.168-.032.076-.033.163-.003.242.045.115.093.224.14.333l.016.035c-.74-.174-1.367-.882-1.73-1.956-.24-.706-.432-1.303-.618-1.88l-.364-1.12c-.318-.969-.32-1.77-.005-1.992.152-.107.417-.056.664.13l.067.044c.058.035.122.051.189.047.154-.011.575-.057.615-.067.368-.092.729-.41.989-.873.413-.734.708-1.8 1.05-3.033.68-2.47 1.53-5.543 3.728-6.93 2.467-1.555 4.598-1.28 7.064-.961 2.378.306 5.071.653 8.572-.566l.03.02c.266 1.903 1.466 4.403 4.046 5.747.216.108.48.025.592-.187.055-.104.065-.223.03-.336-.035-.112-.112-.203-.217-.257-2.373-1.237-3.417-3.535-3.602-5.273-.014-.132-.09-.253-.202-.325l-.386-.246c-.116-.073-.256-.09-.385-.042-3.406 1.234-6.047.893-8.377.591-2.521-.322-4.904-.628-7.635 1.092-2.484 1.567-3.384 4.822-4.11 7.45-.324 1.172-.604 2.185-.964 2.824-.121.216-.242.33-.322.39-.429-1.955-.721-3.885-.869-5.739-.74-9.28 4.832-13.022 8.22-14.426l.019-.008c.414.18.802.312 1.154.39.857.194 1.28.606 1.458.836l.032.04c.072.095.203.123.315.07l.53-.278c.065-.033.111-.093.129-.164.018-.071.004-.147-.04-.207l-.042-.058c-.213-.297-.847-1.019-2.14-1.311-.65-.146-1.458-.513-2.214-1.007l-.05-.033c-.113-.077-.269-.047-.349.068l-.333.49c-.038.056-.054.125-.04.193.013.066.053.125.11.163l.053.033c.078.05.159.1.238.147C3.4 5.218.446 10.732.998 17.655c.137 1.714.392 3.492.761 5.288-.32-.017-.629.076-.881.255-.437.309-1.07 1.135-.393 3.195L.82 27.42c.22.684.408 1.265.65 1.983.679 2.01 2.043 2.727 3.093 2.727.04 0 .077-.003.12-.007 1.733 3.899 3.833 6.917 6.608 9.494 1.975 1.836 3.936 2.09 5.762 2.09 1.826 0 3.788-.254 5.763-2.09 2.775-2.578 4.876-5.596 6.609-9.494.04.004.08.007.119.007 1.05 0 2.415-.717 3.093-2.728.263-.779.474-1.431.651-1.982l.332-1.024c.677-2.062.045-2.888-.391-3.196"
                                transform="translate(6.947 1.263)" />
                            <path
                                d="M18.526 37.204v-.15c.074-.08.114-.182.114-.29 0-.108-.04-.21-.114-.29v-.151h-2.94v.144c-.079.082-.122.186-.122.297 0 .11.043.215.121.296v.144h2.941zM21.137 34.643c0-.242-.197-.44-.439-.44h-7.29c-.243 0-.44.198-.44.44 0 .243.197.44.44.44h7.29c.242 0 .439-.197.439-.44M25.18 20.459c0-.243-.197-.44-.438-.44h-4.396c-.243 0-.44.197-.44.44 0 .242.197.44.44.44h4.396c.241 0 .438-.198.438-.44M22.543 24.377c.881 0 1.599-.447 1.599-.997s-.718-.998-1.6-.998c-.88 0-1.597.447-1.597.998 0 .56.701.997 1.598.997M14.178 20.459c0-.243-.197-.44-.44-.44H9.344c-.242 0-.44.197-.44.44 0 .242.198.44.44.44h4.396c.242 0 .439-.198.439-.44M11.54 24.377c.882 0 1.6-.447 1.6-.997s-.718-.998-1.6-.998c-.881 0-1.597.447-1.597.998 0 .56.7.997 1.597.997"
                                transform="translate(6.947 1.263)" />
                        </g>
                    </g>
                </svg>"""
    elif bucket == "MODERATE":
        return """
                <svg width="100" height="100" viewBox="0 0 50 50">
                    <g fill="none">
                        <path d="M0 48L48 48 48 0 0 0z" />
                        <g fill="#ffc300">
                            <path
                                d="M15.904 36.324c-.243 0-.44.197-.44.44 0 .242.197.44.44.44h2.298c.242 0 .439-.198.439-.44 0-.243-.197-.44-.44-.44h-2.297zM15.614 29.612c.52.15.999.223 1.465.223.467 0 .945-.073 1.465-.223.233-.067.368-.311.3-.545-.033-.114-.108-.208-.213-.265-.101-.055-.22-.068-.33-.035-.88.254-1.564.254-2.442 0-.111-.034-.23-.021-.332.036-.105.057-.181.15-.213.264-.033.112-.02.232.037.335.057.103.15.178.263.21M20.994 35.964c.135 0 .26-.06.343-.164.074-.092.108-.207.094-.323-.012-.117-.069-.222-.16-.295-1.154-.93-2.522-1.402-4.065-1.402-1.544 0-2.911.472-4.066 1.401-.091.074-.149.179-.16.295-.014.117.02.232.094.324s.18.15.297.161c.115.012.23-.022.32-.094.994-.8 2.176-1.206 3.515-1.206 1.338 0 2.52.405 3.513 1.206.08.063.175.097.275.097M25.075 21.437c.117-.015.22-.076.291-.169.072-.093.102-.208.088-.324-.03-.22-.222-.381-.444-.381l-.051.003c-1.572.206-3.239-.339-4.356-1.427-.172-.168-.451-.164-.62.008-.083.084-.128.196-.126.312.001.118.049.228.133.31 1.104 1.077 2.713 1.72 4.306 1.72.26 0 .522-.018.779-.052M14.108 19.147c-.083-.085-.193-.132-.315-.133-.116 0-.224.044-.306.125-1.118 1.09-2.79 1.637-4.356 1.427-.238-.034-.46.134-.494.378-.031.24.14.46.379.493.257.034.52.052.78.052 1.59 0 3.201-.644 4.306-1.72.173-.17.176-.449.006-.622M24.142 23.38c0-.55-.718-.998-1.6-.998-.88 0-1.597.447-1.597.998 0 .559.701.997 1.598.997.881 0 1.599-.447 1.599-.997M11.54 24.377c.882 0 1.6-.447 1.6-.997s-.718-.998-1.6-.998c-.881 0-1.597.447-1.597.998 0 .56.7.997 1.597.997"
                                transform="translate(6.947 1.263)" />
                            <path
                                d="M33.228 23.199c-.254-.181-.561-.271-.882-.256.368-1.782.624-3.56.762-5.289.383-4.808-.867-8.922-3.617-11.896C26.559 2.586 22.025.767 17.053.767c-1.247 0-2.362.122-2.998.239-.282-.148-.516-.283-.733-.425L13.27.546c-.112-.074-.268-.044-.346.07l-.334.49c-.039.056-.054.126-.039.192.013.067.053.126.11.162l.052.034c.862.566 1.803.991 2.58 1.166.858.194 1.282.606 1.459.835l.033.042c.075.095.2.122.314.068l.532-.278c.064-.034.11-.094.127-.164s.003-.145-.04-.206l-.042-.059c-.15-.209-.564-.698-1.353-1.046.274-.011.555-.019.73-.019 4.68 0 8.927 1.694 11.654 4.648 2.579 2.794 3.701 6.524 3.337 11.088-.157 1.966-.475 4.01-.944 6.081l-.05.271c-.018.092.006.186.066.258.059.072.15.115.243.115h.361c.07 0 .135-.023.193-.067l.057-.044c.22-.168.494-.218.641-.113.315.222.313 1.023-.004 1.992 0 0-.742 2.29-.982 3-.36 1.064-1.001 1.786-1.732 1.959l.014-.035.021-.049c.041-.094.082-.19.123-.29.029-.077.027-.164-.005-.24-.033-.075-.096-.137-.174-.168l-.41-.16c-.16-.06-.342.02-.405.176-1.77 4.445-3.984 7.807-6.97 10.58-1.61 1.496-3.177 1.803-5.035 1.803s-3.425-.307-5.035-1.804c-2.986-2.772-5.2-6.134-6.97-10.579-.064-.16-.242-.237-.407-.176l-.408.16c-.078.03-.141.092-.174.17-.032.075-.033.163-.002.24.046.117.094.228.142.34.005.01.009.018.012.028-.74-.174-1.366-.882-1.73-1.956-.239-.706-.981-3-.981-3-.318-.969-.32-1.77-.005-1.992.153-.108.417-.056.664.13l.067.044c.057.034.119.054.189.047.153-.016.594-.062.615-.067.368-.094.729-.41.989-.873.413-.734.708-1.8 1.05-3.033.68-2.47 1.53-5.543 3.728-6.93 2.467-1.555 4.598-1.28 7.064-.961 2.378.306 5.073.653 8.572-.566l.03.02c.266 1.903 1.466 4.403 4.046 5.747.216.11.481.026.592-.187.055-.104.065-.223.03-.336-.035-.112-.112-.203-.217-.257-2.373-1.237-3.417-3.535-3.602-5.273-.014-.132-.09-.253-.202-.325l-.386-.246c-.117-.073-.257-.09-.385-.042-3.407 1.234-6.048.893-8.377.591-2.522-.322-4.904-.627-7.635 1.092-2.484 1.567-3.384 4.822-4.11 7.45-.324 1.172-.604 2.185-.964 2.824-.121.216-.242.33-.322.39-.429-1.955-.721-3.885-.869-5.739-.74-9.28 4.832-13.022 8.22-14.426l.019-.008c.414.18.802.312 1.154.39.857.194 1.28.606 1.458.836l.032.04c.072.095.203.124.315.07l.53-.278c.065-.033.111-.093.129-.164.018-.071.004-.147-.04-.207l-.042-.058c-.213-.297-.847-1.019-2.14-1.311-.65-.146-1.458-.513-2.214-1.007l-.05-.033c-.112-.077-.269-.047-.349.068l-.333.49c-.038.056-.054.125-.04.193.013.066.053.125.11.163l.053.033c.078.05.159.1.238.147C3.4 5.218.446 10.732.998 17.655c.137 1.714.392 3.492.761 5.288-.319-.017-.629.076-.881.255-.437.309-1.07 1.135-.393 3.195 0 0 .742 2.29.984 3.009.679 2.01 2.043 2.727 3.093 2.727.04 0 .077-.003.12-.007 1.733 3.899 3.833 6.917 6.608 9.494 1.975 1.836 3.936 2.09 5.762 2.09 1.826 0 3.788-.254 5.763-2.09 2.774-2.577 4.875-5.596 6.609-9.494.039.004.08.007.119.007 1.05 0 2.415-.717 3.093-2.728.263-.779.983-3.006.983-3.006.677-2.062.045-2.888-.391-3.196"
                                transform="translate(6.947 1.263)" />
                        </g>
                    </g>
                </svg>"""
    elif bucket == "POOR":
        return """
                <svg width="100" height="100" viewBox="0 0 50 50">
                    <g fill="none">
                        <path d="M0 48L48 48 48 0 0 0z"/>
                        <g fill="#E8630A">
                            <path d="M25.18 20.458c0-.242-.197-.44-.438-.44h-4.396c-.243 0-.44.198-.44.44 0 .243.197.44.44.44h4.396c.241 0 .438-.197.438-.44M20.945 23.38c0 .56.701.997 1.597.997.883 0 1.6-.447 1.6-.997s-.717-.999-1.6-.999c-.88 0-1.597.449-1.597 1M14.178 20.458c0-.242-.197-.44-.44-.44H9.344c-.242 0-.44.198-.44.44 0 .243.198.44.44.44h4.396c.242 0 .439-.197.439-.44M9.942 23.38c0 .56.701.997 1.598.997.882 0 1.6-.447 1.6-.997s-.718-.999-1.6-.999c-.88 0-1.598.449-1.598 1M20.758 32.439h-7.41c-.243 0-.44.197-.44.44s.197.44.44.44h7.41c.243 0 .44-.197.44-.44s-.197-.44-.44-.44M20.758 34.65h-7.41c-.243 0-.44.198-.44.44 0 .243.197.44.44.44h7.41c.243 0 .44-.197.44-.44 0-.242-.197-.44-.44-.44M20.758 36.863h-7.41c-.243 0-.44.197-.44.44 0 .242.197.44.44.44h7.41c.243 0 .44-.198.44-.44 0-.243-.197-.44-.44-.44" transform="translate(6.947 1.263)"/>
                            <path d="M4.54 31.074c-.14-.015-.257-.036-.35-.06l-.026-.008c-.423-.116-1.203-.521-1.683-1.945-.25-.74-.453-1.371-.634-1.927L1.5 26.06c-.317-.969-.32-1.77-.005-1.992.052-.037.121-.055.198-.055.14 0 .305.059.441.168.096.075.12.132.126.151.479 1.84 1.23 4.11 2.009 6.075l.273.666zm12.513 11.564c-1.859 0-3.426-.307-5.036-1.803-2.594-2.41-4.573-5.224-6.226-8.852.528-.025 1.255-.146 2.272-.732.932-.536 1.775-1.073 2.59-1.594l.049-.03c2.356-1.505 4.216-2.693 6.35-2.694 2.135.001 3.996 1.189 6.356 2.696.827.528 1.682 1.074 2.634 1.622 1.018.586 1.745.707 2.272.732-1.653 3.629-3.632 6.443-6.225 8.852-1.61 1.496-3.178 1.803-5.036 1.803zm15.554-16.576l-.349 1.072c-.18.557-.383 1.187-.633 1.927-.48 1.424-1.26 1.83-1.687 1.947l-.019.006c-.094.025-.213.045-.354.06l.272-.666c.78-1.965 1.531-4.234 2.008-6.07.015-.047.058-.1.128-.156.132-.105.296-.168.44-.168.078 0 .147.02.198.056.315.222.312 1.022-.004 1.992zm.62-2.863c-.25-.18-.563-.268-.881-.256.367-1.781.624-3.56.761-5.29.384-4.807-.866-8.921-3.616-11.895-2.932-3.172-7.466-4.99-12.438-4.99-1.247 0-2.362.122-2.998.238-.282-.148-.516-.284-.733-.425L13.27.547c-.113-.075-.269-.045-.347.068l-.333.491c-.039.055-.053.125-.04.192.013.067.053.127.11.163l.053.034c.862.566 1.804.99 2.581 1.166.857.192 1.28.605 1.458.834l.033.042c.073.094.202.123.314.068l.532-.278c.064-.034.11-.094.127-.164s.003-.145-.04-.206l-.042-.058c-.15-.21-.564-.698-1.353-1.048.274-.01.556-.018.73-.018 4.68 0 8.927 1.694 11.654 4.648 2.579 2.793 3.702 6.524 3.337 11.09-.162 2.018-.479 4.062-.942 6.074-.467 2.023-1.541 5.224-2.505 7.466h-.037c-.62 0-1.197-.113-2.08-.623-.944-.543-1.787-1.081-2.605-1.604-2.376-1.517-4.428-2.828-6.826-2.831-2.388.002-4.442 1.313-6.82 2.832-.817.522-1.66 1.06-2.604 1.604-.882.507-1.476.622-2.08.622H5.51c-.866-2.011-1.816-4.778-2.379-6.92.332-.12.653-.424.888-.84.414-.736.708-1.8 1.05-3.034.68-2.47 1.53-5.543 3.728-6.93 2.467-1.555 4.598-1.28 7.065-.961 2.377.306 5.07.653 8.571-.566l.03.02c.267 1.903 1.467 4.403 4.046 5.747.216.109.48.025.592-.187.055-.103.065-.223.03-.336-.035-.112-.112-.203-.217-.257-2.373-1.237-3.416-3.536-3.602-5.273-.014-.132-.09-.253-.202-.325l-.386-.245c-.116-.074-.256-.09-.385-.043-3.407 1.234-6.047.892-8.377.59-2.522-.321-4.905-.627-7.635 1.094-2.485 1.566-3.384 4.822-4.11 7.448-.324 1.173-.604 2.186-.964 2.825-.122.216-.242.33-.322.39-.429-1.952-.721-3.882-.87-5.738-.74-9.28 4.833-13.022 8.22-14.428l.02-.007c.414.18.802.311 1.154.39.857.194 1.281.606 1.458.836l.032.04c.073.095.203.124.315.07l.53-.278c.065-.033.111-.093.129-.164.018-.071.004-.147-.04-.206l-.042-.06c-.213-.296-.847-1.018-2.14-1.31-.65-.146-1.458-.513-2.214-1.007l-.05-.033c-.113-.076-.269-.047-.349.068l-.333.49c-.038.055-.053.126-.04.193.013.066.053.125.11.162l.053.034c.078.051.159.1.238.147C3.4 5.218.446 10.732.998 17.654c.136 1.714.392 3.493.761 5.29-.316-.012-.628.075-.881.254-.437.31-1.07 1.135-.393 3.195 0 0 .722 2.232.984 3.01.679 2.01 2.043 2.726 3.093 2.726.04 0 .078-.003.12-.007 1.735 3.9 3.835 6.919 6.608 9.496 1.975 1.834 3.937 2.088 5.763 2.088 1.825 0 3.788-.254 5.763-2.09 2.772-2.576 4.873-5.594 6.608-9.494.04.004.079.007.12.007 1.05 0 2.414-.716 3.092-2.727.26-.77.983-3.007.983-3.007.677-2.062.045-2.887-.391-3.196z" transform="translate(6.947 1.263)"/>
                        </g>
                    </g>
                </svg>"""
    elif bucket == "VERY POOR":
        return """
                <svg width="100" height="100" viewBox="0 0 50 50">
                    <g fill="none">
                        <path d="M0 48L48 48 48 0 0 0z"/>
                        <g fill="#FF1700">
                            <path d="M16.992 37.511c-1.157 0-2.1-.942-2.1-2.099 0-1.156.943-2.098 2.1-2.098s2.098.942 2.098 2.098c0 1.157-.941 2.099-2.098 2.099m0-5.076c-1.643 0-2.978 1.336-2.978 2.977 0 1.642 1.335 2.979 2.978 2.979 1.642 0 2.977-1.337 2.977-2.979 0-1.641-1.335-2.977-2.977-2.977" transform="translate(6.947 1.263)"/>
                            <path d="M16.992 39.062c-2.013 0-3.65-1.637-3.65-3.65 0-2.011 1.637-3.648 3.65-3.648 2.012 0 3.649 1.637 3.649 3.648 0 2.013-1.637 3.65-3.65 3.65m0-8.178c-2.497 0-4.528 2.032-4.528 4.528 0 2.498 2.031 4.53 4.529 4.53 2.497 0 4.528-2.032 4.528-4.53 0-2.496-2.031-4.528-4.528-4.528" transform="translate(6.947 1.263)"/>
                            <path d="M30.833 35.621c.003.011.002.023-.003.031l-4.595 8.904c-.01.02-.035.027-.055.018l-.968-.5 4.633-8.976.967.5c.01.005.017.013.02.022v.001zM3.31 35.597l.969-.498 4.632 8.976-.967.498c-.019.01-.046.002-.055-.017l-4.596-8.902c-.005-.01-.005-.022-.003-.033.004-.013.013-.02.02-.024zm4.642-1.908c.378.121.684.381.866.732l3.274 6.345c.182.35.215.752.095 1.129s-.38.685-.731.865l-1.764.911-4.633-8.976 1.764-.91c.347-.179.76-.214 1.13-.096zm13.05 7.98c-1.363.85-2.704.969-3.95.969-1.24 0-2.575-.117-3.934-.96.048-.46-.036-.914-.244-1.315l-3.275-6.344c-.022-.044-.05-.084-.078-.126 2.14-3.972 5.74-6.939 7.541-6.942 1.801.003 5.402 2.97 7.541 6.941-.027.04-.056.082-.079.126l-3.275 6.345c-.206.4-.291.85-.247 1.305zm5.62-8.05c.237 0 .465.056.678.166l1.764.91-4.633 8.976-1.764-.91c-.724-.375-1.01-1.27-.637-1.995l3.276-6.345c.18-.35.487-.61.864-.732.147-.046.3-.07.453-.07zm6.606-10.42c-.251-.18-.56-.27-.882-.256.368-1.782.624-3.56.762-5.29.383-4.808-.868-8.921-3.617-11.896-2.932-3.17-7.466-4.99-12.438-4.99-1.247 0-2.362.122-2.998.238-.282-.147-.516-.283-.733-.424L13.27.547c-.113-.075-.267-.044-.346.069l-.334.49c-.039.055-.054.125-.04.191.013.068.053.127.11.164l.053.033c.862.566 1.803.991 2.58 1.167.858.192 1.282.605 1.459.834l.033.042c.073.094.202.123.314.068l.532-.277c.064-.035.11-.095.127-.165s.003-.145-.04-.206l-.042-.059c-.15-.209-.564-.698-1.353-1.046.274-.012.555-.02.73-.02 4.68 0 8.927 1.695 11.654 4.65 2.579 2.792 3.701 6.523 3.337 11.088-.157 1.965-.475 4.01-.944 6.08l-.05.27c-.018.093.006.188.066.259.059.073.147.115.243.115h.361c.07 0 .135-.023.193-.066l.057-.044c.22-.169.493-.219.641-.115.315.223.313 1.024-.004 1.994 0 0-.732 2.258-.982 2.998-.36 1.064-1 1.787-1.732 1.96l.015-.037c.047-.11.096-.22.143-.336.03-.08.028-.164-.005-.24-.033-.076-.096-.137-.174-.169l-.41-.16c-.16-.06-.342.02-.405.177-.38.956-.792 1.876-1.25 2.8l-.103-.052c-.561-.29-1.2-.344-1.8-.151-.246.078-.475.194-.68.345-.966-1.708-2.354-3.452-3.817-4.795-1.633-1.5-3.177-2.328-4.348-2.331-1.165.003-2.707.831-4.341 2.331-1.463 1.344-2.85 3.088-3.817 4.796-.206-.152-.435-.268-.682-.346-.6-.192-1.24-.139-1.799.15l-.107.056-.022-.028c-.466-.935-.872-1.843-1.244-2.775-.064-.16-.242-.238-.407-.177l-.409.16c-.077.032-.14.093-.173.168-.033.077-.034.162-.003.242.039.098.08.191.12.285l.018.045.017.038c-.74-.174-1.366-.881-1.73-1.956-.238-.706-.981-3-.981-3-.318-.969-.32-1.769-.005-1.992.152-.108.417-.055.664.131l.067.042c.057.036.12.053.189.048.154-.011.593-.062.615-.067.368-.092.729-.41.989-.872.414-.736.708-1.8 1.05-3.034.68-2.47 1.53-5.543 3.728-6.929 2.467-1.556 4.598-1.28 7.064-.962 2.378.306 5.073.653 8.572-.566l.03.02c.266 1.903 1.466 4.403 4.046 5.747.215.11.482.025.592-.187.055-.104.065-.223.03-.336-.035-.112-.112-.203-.217-.257-2.373-1.237-3.417-3.535-3.602-5.274-.014-.13-.09-.253-.202-.324l-.386-.246c-.116-.073-.257-.09-.385-.042-3.406 1.234-6.046.892-8.377.591-2.522-.322-4.904-.627-7.635 1.093-2.485 1.566-3.384 4.821-4.11 7.448-.324 1.173-.604 2.186-.964 2.825-.122.217-.245.333-.322.39-.43-1.956-.721-3.886-.87-5.738-.74-9.28 4.833-13.022 8.22-14.427l.02-.009c.414.181.802.312 1.154.392.857.193 1.28.606 1.458.834l.032.041c.073.095.203.123.315.07l.53-.278c.065-.033.111-.093.129-.164.018-.071.004-.147-.04-.206l-.042-.059c-.213-.297-.847-1.019-2.14-1.311-.65-.147-1.458-.514-2.214-1.007l-.051-.033c-.112-.076-.268-.046-.348.068l-.333.49c-.038.056-.054.126-.04.193.013.066.053.125.11.163l.053.032c.078.052.159.101.238.148C3.4 5.22.446 10.732.998 17.654c.137 1.714.392 3.494.761 5.29-.319-.019-.629.075-.881.254-.437.31-1.07 1.135-.393 3.195 0 0 .722 2.232.984 3.009.679 2.01 2.043 2.727 3.093 2.727.04 0 .077-.003.118-.007.18.405.375.818.594 1.26L2.82 34.649c-.543.28-.757.951-.477 1.495l4.596 8.904c.192.37.57.6.987.6.178 0 .348-.042.507-.124l3.512-1.814c.405-.207.744-.52.986-.903 1.457.79 2.841.9 4.121.9 1.222 0 2.666-.11 4.134-.908.241.387.583.701.992.911l3.512 1.814c.156.081.332.124.507.124.417 0 .796-.23.987-.6l4.595-8.904c.28-.543.067-1.213-.476-1.495l-2.469-1.273c.213-.43.406-.841.59-1.253.039.004.079.007.119.007 1.05 0 2.415-.716 3.093-2.727.26-.77.983-3.007.983-3.007.677-2.062.045-2.888-.391-3.196z" transform="translate(6.947 1.263)"/>
                            <path d="M25.18 20.459c0-.243-.197-.44-.438-.44h-4.396c-.243 0-.44.197-.44.44 0 .242.197.44.44.44h4.396c.241 0 .438-.198.438-.44M20.945 23.38c0 .56.701.997 1.597.997.883 0 1.6-.447 1.6-.997s-.717-.998-1.6-.998c-.88 0-1.597.448-1.597.998M14.178 20.459c0-.243-.197-.44-.44-.44H9.344c-.242 0-.44.197-.44.44 0 .242.198.44.44.44h4.396c.242 0 .439-.198.439-.44M9.942 23.38c0 .56.701.997 1.598.997.882 0 1.6-.447 1.6-.997s-.718-.998-1.6-.998c-.88 0-1.598.448-1.598.998" transform="translate(6.947 1.263)"/>
                        </g>
                    </g>
                </svg>"""
    else:
        return """
                <svg width="100" height="100" viewBox="0 0 50 50">
                    <g fill="none">
                        <path d="M0 48L48 48 48 0 0 0z" />
                        <g fill="#7B113A">
                            <path
                                d="M22.763 20.682c1.048 0 1.901 1.163 1.901 2.592s-.853 2.591-1.9 2.591c-1.05 0-1.902-1.162-1.902-2.59 0-1.43.853-2.593 1.901-2.593m0 6.063c1.533 0 2.78-1.557 2.78-3.47 0-1.915-1.247-3.473-2.78-3.473-1.532 0-2.78 1.558-2.78 3.472s1.248 3.47 2.78 3.47M11.341 20.682c1.048 0 1.901 1.163 1.901 2.592s-.853 2.591-1.9 2.591c-1.05 0-1.902-1.162-1.902-2.59 0-1.43.853-2.593 1.901-2.593m0 6.063c1.533 0 2.78-1.557 2.78-3.47 0-1.915-1.247-3.473-2.78-3.473-1.533 0-2.78 1.558-2.78 3.472s1.247 3.47 2.78 3.47M13.438 38.11c.97-.535 2.27-.84 3.615-.84 1.344 0 2.645.305 3.614.84h-7.229zM11.9 39.856c.067-.299.216-.59.443-.866h9.422c.227.276.375.567.442.866H11.899zm8.496 2.627c-.938.452-2.113.699-3.342.699-1.23 0-2.405-.247-3.341-.7h6.683zm1.774-1.747c-.094.303-.27.595-.526.867h-9.181c-.255-.272-.431-.564-.526-.867H22.17zm-5.116 3.326c3.351 0 6.078-1.72 6.078-3.836 0-2.115-2.727-3.836-6.078-3.836-3.352 0-6.078 1.72-6.078 3.836 0 2.115 2.726 3.836 6.078 3.836z"
                                transform="translate(6.947 1.263)" />
                            <path
                                d="M10.855 36.782v-.001c.256-2.14 2.99-3.824 6.224-3.833 3.234.01 5.968 1.698 6.225 3.847.427 3.05.46 3.487.46 3.547 0 2.364-3 4.294-6.685 4.303-3.686-.009-6.685-1.94-6.685-4.303 0-.061.032-.498.461-3.56m6.223-21.486c5.05.007 9.128 2.143 10.15 5.314 1.197 3.725-1.382 9.431-4.482 13.459-1.346-1.245-3.448-1.994-5.641-2.006h-.053c-2.193.012-4.295.76-5.64 2.006-3.1-4.028-5.68-9.734-4.483-13.46 1.022-3.17 5.1-5.306 10.15-5.313m16.149 7.903c-.236-.168-.524-.257-.823-.257l-.059.001c.367-1.781.624-3.56.761-5.289.384-4.808-.866-8.922-3.616-11.896C26.559 2.586 22.025.767 17.053.767c-1.247 0-2.362.122-2.998.239-.282-.148-.516-.283-.733-.426L13.27.546c-.113-.074-.269-.043-.347.07l-.333.49c-.039.056-.053.125-.04.191.013.068.053.127.11.163l.053.034c.864.566 1.805.991 2.581 1.166.857.194 1.28.606 1.458.835l.033.042c.074.094.204.121.314.068l.532-.278c.064-.033.11-.094.127-.163.018-.072.004-.147-.04-.207l-.042-.059c-.15-.209-.564-.698-1.353-1.046.274-.012.555-.02.73-.02 4.68 0 8.927 1.695 11.654 4.649 2.578 2.793 3.7 6.524 3.337 11.089-.157 1.965-.475 4.01-.943 6.08l-.052.271c-.017.092.007.186.067.258.06.072.15.115.243.115h.361c.07 0 .135-.023.193-.066l.057-.045c.22-.168.495-.217.641-.113.315.222.312 1.023-.005 1.992 0 0-.748 2.307-.981 3-.36 1.064-1.001 1.786-1.732 1.959l.014-.035.021-.048c.041-.095.082-.19.123-.29.028-.078.027-.165-.005-.24-.033-.076-.096-.138-.175-.169l-.408-.16c-.16-.06-.341.019-.406.177-1.267 3.18-2.788 5.828-4.647 8.091-.065-.474-.14-1.03-.23-1.671-.082-.678-.36-1.332-.829-1.943 3.298-4.237 6.03-10.318 4.717-14.395-1.138-3.537-5.554-5.919-10.99-5.927-5.435.008-9.851 2.39-10.989 5.927-1.312 4.076 1.419 10.158 4.716 14.394-.468.613-.747 1.266-.826 1.94-.094.666-.173 1.24-.238 1.727-1.883-2.278-3.42-4.944-4.694-8.144-.066-.16-.244-.237-.407-.176l-.407.16c-.079.03-.142.093-.175.17-.032.075-.033.163-.003.24.046.116.095.228.143.34.004.009.009.018.012.028-.74-.174-1.367-.882-1.73-1.956-.239-.706-.98-3-.98-3-.319-.969-.32-1.77-.006-1.992.152-.107.417-.056.664.131l.067.043c.058.035.12.052.189.047.154-.011.594-.062.614-.067.368-.094.73-.41.99-.873.414-.734.708-1.8 1.05-3.033.68-2.47 1.53-5.543 3.728-6.93 2.467-1.555 4.598-1.28 7.065-.96 2.379.305 5.073.652 8.571-.567l.03.02c.267 1.903 1.467 4.403 4.046 5.747.216.108.481.025.592-.187.055-.104.065-.223.03-.336-.035-.111-.112-.203-.217-.257-2.373-1.237-3.416-3.535-3.602-5.273-.014-.132-.09-.254-.202-.326l-.386-.245c-.118-.073-.257-.09-.385-.042-3.407 1.234-6.048.893-8.377.591-2.522-.322-4.906-.627-7.635 1.092-2.484 1.567-3.384 4.822-4.11 7.45-.324 1.172-.604 2.185-.964 2.824-.12.216-.242.33-.322.39-.43-1.955-.721-3.885-.869-5.738-.74-9.281 4.832-13.023 8.22-14.427l.02-.008c.413.18.801.312 1.153.39.857.194 1.28.606 1.458.835l.032.04c.073.096.203.124.315.07l.532-.278c.064-.034.11-.094.127-.163.018-.071.003-.147-.04-.207l-.042-.058c-.213-.297-.847-1.02-2.14-1.31-.65-.147-1.458-.514-2.214-1.008l-.05-.033c-.113-.076-.269-.046-.349.068l-.333.49c-.039.056-.053.126-.04.193.013.067.053.126.11.162l.053.034c.078.051.159.1.238.147C3.4 5.218.446 10.732.998 17.655c.136 1.713.392 3.492.761 5.288-.317-.014-.628.076-.881.255-.437.309-1.07 1.135-.393 3.195 0 0 .742 2.29.984 3.009.679 2.01 2.043 2.727 3.093 2.727.04 0 .077-.003.12-.007 1.332 2.998 2.928 5.519 4.875 7.705-.032.282-.047.446-.047.515 0 2.841 3.383 5.168 7.543 5.188h.052c4.159-.02 7.542-2.347 7.542-5.188 0-.074-.016-.255-.054-.568 1.927-2.175 3.508-4.678 4.83-7.652.04.004.08.007.12.007 1.05 0 2.415-.716 3.093-2.728.263-.779.983-3.006.983-3.006.677-2.062.046-2.888-.391-3.196"
                                transform="translate(6.947 1.263)" />
                        </g>
                    </g>
                </svg>"""


def get_suggestions(bucket):
    if bucket == "GOOD":
        return [
            """<svg width="42" height="42" viewBox="0 0 42 42">
                        <g fill="none" fill-rule="evenodd">
                            <path d="M0 42L42 42 42 0 0 0z"/>
                            <path fill="#85EF47" d="M36 20.498h-7v-9.965l7-4.666v14.631zm0 15.631l-7-4.666v-9.965h7v14.631zm-21.95-5.181h13.9v-19.9h-13.9v19.9zM6 36.129l.002-14.631H13v9.965l-7 4.666zm.005-30.26L13 10.533v9.965H6.002l.003-14.629zm29.992-1.005c-.185 0-.377.054-.552.17L28 9.998H14L6.555 5.034c-.175-.116-.367-.17-.552-.17C5.482 4.864 5 5.278 5 5.866v30.263c0 .589.482 1.002 1.003 1.002.185 0 .377-.053.552-.17L14 31.998h14l7.445 4.963c.175.117.367.17.552.17.521 0 1.003-.413 1.003-1.002V5.866c0-.588-.482-1.002-1.003-1.002z"/>
                        </g>
                </svg>""",
            "Open your windows to bring clean, fresh air indoors",
            """<svg>
                    <g fill="none">
                        <path d="M0 42L42 42 42 0 0 0z"/>
                        <path fill="#72AA29" d="M31.5 22.25c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5 7.5-3.357 7.5-7.5-3.357-7.5-7.5-7.5m0 1c3.584 0 6.5 2.916 6.5 6.5s-2.916 6.5-6.5 6.5-6.5-2.916-6.5-6.5 2.916-6.5 6.5-6.5"/>
                        <path fill="#72AA29" d="M30.694 34.169c-.033 0-.067-.003-.1-.011-1.906-.39-3.338-1.95-3.563-3.881-.033-.274.164-.522.437-.554.278-.035.524.164.555.438.176 1.5 1.29 2.714 2.772 3.019.27.054.444.319.388.59-.049.236-.257.399-.489.399M29.188 6.229c-1.378 0-2.5 1.122-2.5 2.5 0 1.379 1.122 2.5 2.5 2.5 1.379 0 2.5-1.121 2.5-2.5 0-1.378-1.121-2.5-2.5-2.5m0 6c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5"/>
                        <path fill="#72AA29" d="M20.564 31.426c-.037 0-.076-.005-.113-.014-.27-.062-.438-.332-.373-.6l1.399-5.99c.052-.222-.047-.444-.247-.55l-7.681-4.104c-.66-.351-.961-1.152-.697-1.86 1.47-3.95 6.192-8.557 10.308-8.807.69-.038 1.337.416 1.53 1.09l1.583 5.547c.061.214.26.362.48.362h6.757c.276 0 .5.224.5.5 0 .277-.224.5-.5.5h-6.756c-.667 0-1.259-.447-1.442-1.088l-1.585-5.545c-.064-.226-.262-.382-.506-.368-3.745.228-8.069 4.495-9.431 8.158-.092.246.005.509.23.63l7.681 4.102c.596.318.904 1.002.75 1.662l-1.4 5.988c-.053.23-.26.387-.486.387"/>
                        <path fill="#72AA29" d="M10.5 22.25c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5 7.5-3.357 7.5-7.5-3.357-7.5-7.5-7.5m0 1c3.584 0 6.5 2.916 6.5 6.5s-2.916 6.5-6.5 6.5S4 33.334 4 29.75s2.916-6.5 6.5-6.5"/>
                        <path fill="#72AA29" d="M9.694 34.169c-.033 0-.067-.003-.1-.011-1.906-.39-3.338-1.95-3.563-3.881-.033-.274.164-.522.437-.554.282-.035.524.164.555.438.176 1.5 1.29 2.714 2.772 3.019.27.054.444.319.388.59-.049.236-.257.399-.489.399"/>
                    </g>
                </svg>""",
            "Enjoy outdoor activities",
        ]
    elif bucket == "SATISFACTORY":
        return [
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <defs>
                        <path id="prefix__a" d="M0 0L42 0 42 42 0 42z"/>
                    </defs>
                    <g fill="none" fill-rule="evenodd">
                        <path d="M0 0H42V42H0z"/>
                        <mask id="prefix__b" fill="#fff">
                            <use xlink:href="#prefix__a"/>
                        </mask>
                        <path fill="#DA3740" d="M36 20.5h-7v-6.793l7-7V20.5zm0 15.632l-7-4.667V21.5h7v14.632zM14.05 30.95v-2.293l13.9-13.9V30.95h-13.9zm-6.323 4.03L13 29.707v1.758L7.727 34.98zM6.002 21.5H13v6.793l-7 7L6.002 21.5zm.003-15.629L13 10.535V20.5H6.002l.003-14.629zM27.95 11.05v2.293l-13.9 13.9V11.05h13.9zm6.322-4.029L29 12.293v-1.758l5.272-3.514zM41.854.146c-.196-.195-.512-.195-.708 0l-4.791 4.791c-.113-.043-.234-.07-.358-.07-.185 0-.377.053-.552.169L28 10H14L6.555 5.036c-.175-.116-.367-.169-.552-.169C5.482 4.867 5 5.28 5 5.868v30.264c0 .048.021.087.027.134l-4.881 4.88c-.195.196-.195.512 0 .708.098.097.226.146.354.146.128 0 .256-.049.354-.146l4.791-4.792c.113.044.234.071.358.071.185 0 .377-.053.552-.169L14 32h14l7.445 4.964c.175.116.367.169.552.169.521 0 1.003-.413 1.003-1.001V5.868c0-.048-.021-.087-.027-.134l4.881-4.88c.195-.196.195-.512 0-.708z" mask="url(#prefix__b)"/>
                    </g>
                </svg>""",
            "Close your windows to avoid dirty outdoor air",
            """<svg>
                    <g fill="none">
                        <path d="M0 42L42 42 42 0 0 0z"/>
                        <path fill="#E8630A" d="M31.5 22.25c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5 7.5-3.357 7.5-7.5-3.357-7.5-7.5-7.5m0 1c3.584 0 6.5 2.916 6.5 6.5s-2.916 6.5-6.5 6.5-6.5-2.916-6.5-6.5 2.916-6.5 6.5-6.5"/>
                        <path fill="#E8630A" d="M30.694 34.169c-.033 0-.067-.003-.1-.011-1.906-.39-3.338-1.95-3.563-3.881-.033-.274.164-.522.437-.554.278-.035.524.164.555.438.176 1.5 1.29 2.714 2.772 3.019.27.054.444.319.388.59-.049.236-.257.399-.489.399M29.188 6.229c-1.378 0-2.5 1.122-2.5 2.5 0 1.379 1.122 2.5 2.5 2.5 1.379 0 2.5-1.121 2.5-2.5 0-1.378-1.121-2.5-2.5-2.5m0 6c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5"/>
                        <path fill="#E8630A" d="M20.564 31.426c-.037 0-.076-.005-.113-.014-.27-.062-.438-.332-.373-.6l1.399-5.99c.052-.222-.047-.444-.247-.55l-7.681-4.104c-.66-.351-.961-1.152-.697-1.86 1.47-3.95 6.192-8.557 10.308-8.807.69-.038 1.337.416 1.53 1.09l1.583 5.547c.061.214.26.362.48.362h6.757c.276 0 .5.224.5.5 0 .277-.224.5-.5.5h-6.756c-.667 0-1.259-.447-1.442-1.088l-1.585-5.545c-.064-.226-.262-.382-.506-.368-3.745.228-8.069 4.495-9.431 8.158-.092.246.005.509.23.63l7.681 4.102c.596.318.904 1.002.75 1.662l-1.4 5.988c-.053.23-.26.387-.486.387"/>
                        <path fill="#E8630A" d="M10.5 22.25c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5 7.5-3.357 7.5-7.5-3.357-7.5-7.5-7.5m0 1c3.584 0 6.5 2.916 6.5 6.5s-2.916 6.5-6.5 6.5S4 33.334 4 29.75s2.916-6.5 6.5-6.5"/>
                        <path fill="#E8630A" d="M9.694 34.169c-.033 0-.067-.003-.1-.011-1.906-.39-3.338-1.95-3.563-3.881-.033-.274.164-.522.437-.554.282-.035.524.164.555.438.176 1.5 1.29 2.714 2.772 3.019.27.054.444.319.388.59-.049.236-.257.399-.489.399"/>
                    </g>
                </svg>""",
            "Sensitive groups should reduce outdoor exercise",
        ]
    elif bucket == "MODERATE":
        return [
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <g fill="none">
                        <path d="M0 42L42 42 42 0 0 0z"/>
                        <path fill="#DA3740" d="M34.111 20.13c.422-1.362 1.19-4.671 1.25-4.91.947-3.69 1.773-6.876 3.314-6.604.53.093.832.597.901 1.497.216 2.87-2.149 8.21-5.465 10.018M21.001 34c-5.99 0-11.039-8.672-12.973-17.194 3.021-.513 5.352-2.036 7.434-3.4C17.437 12.116 19.142 11 21 11c1.857 0 3.562 1.115 5.538 2.407 2.082 1.363 4.412 2.886 7.433 3.399C32.038 25.328 26.99 34 21.001 34M2.423 10.113c.068-.9.371-1.404.9-1.496 1.551-.286 2.367 2.914 3.314 6.604.061.238.828 3.547 1.25 4.91-3.316-1.808-5.68-7.147-5.464-10.018m38.148-.076c-.14-1.853-1.14-2.302-1.724-2.406-2.455-.431-3.34 2.999-4.456 7.342-.07.276-.145.563-.219.846-5.686-.95-8.878-5.82-13.173-5.82s-7.488 4.87-13.174 5.82c-.073-.283-.149-.57-.219-.846C6.492 10.629 5.614 7.2 3.15 7.63c-.583.104-1.583.553-1.723 2.406-.26 3.458 2.707 9.865 6.872 11.376C10.925 28.979 15.627 35 21 35s10.074-6.021 12.7-13.587c4.165-1.511 7.134-7.918 6.872-11.376"/>
                        <path fill="#DA3740" d="M26.307 19.006H15.694c-.278 0-.5.224-.5.5s.222.5.5.5h10.613c.277 0 .5-.224.5-.5s-.223-.5-.5-.5M26.307 22.287H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5M26.307 25.568H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5"/>
                    </g>
                </svg>""",
            "Sensitive groups should wear a mask outdoors",
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <defs>
                        <path id="prefix__a" d="M0 0L42 0 42 42 0 42z"/>
                    </defs>
                    <g fill="none" fill-rule="evenodd">
                        <path d="M0 0H42V42H0z"/>
                        <mask id="prefix__b" fill="#fff">
                            <use xlink:href="#prefix__a"/>
                        </mask>
                        <path fill="#DA3740" d="M36 20.5h-7v-6.793l7-7V20.5zm0 15.632l-7-4.667V21.5h7v14.632zM14.05 30.95v-2.293l13.9-13.9V30.95h-13.9zm-6.323 4.03L13 29.707v1.758L7.727 34.98zM6.002 21.5H13v6.793l-7 7L6.002 21.5zm.003-15.629L13 10.535V20.5H6.002l.003-14.629zM27.95 11.05v2.293l-13.9 13.9V11.05h13.9zm6.322-4.029L29 12.293v-1.758l5.272-3.514zM41.854.146c-.196-.195-.512-.195-.708 0l-4.791 4.791c-.113-.043-.234-.07-.358-.07-.185 0-.377.053-.552.169L28 10H14L6.555 5.036c-.175-.116-.367-.169-.552-.169C5.482 4.867 5 5.28 5 5.868v30.264c0 .048.021.087.027.134l-4.881 4.88c-.195.196-.195.512 0 .708.098.097.226.146.354.146.128 0 .256-.049.354-.146l4.791-4.792c.113.044.234.071.358.071.185 0 .377-.053.552-.169L14 32h14l7.445 4.964c.175.116.367.169.552.169.521 0 1.003-.413 1.003-1.001V5.868c0-.048-.021-.087-.027-.134l4.881-4.88c.195-.196.195-.512 0-.708z" mask="url(#prefix__b)"/>
                    </g>
                </svg>""",
            "Close your windows to avoid dirty outdoor air",
        ]
    elif bucket == "POOR":
        return [
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <defs>
                        <path id="prefix__a" d="M0 0L42 0 42 42 0 42z"/>
                    </defs>
                    <g fill="none" fill-rule="evenodd">
                        <path d="M0 0H42V42H0z"/>
                        <mask id="prefix__b" fill="#fff">
                            <use xlink:href="#prefix__a"/>
                        </mask>
                        <path fill="#DA3740" d="M36 20.5h-7v-6.793l7-7V20.5zm0 15.632l-7-4.667V21.5h7v14.632zM14.05 30.95v-2.293l13.9-13.9V30.95h-13.9zm-6.323 4.03L13 29.707v1.758L7.727 34.98zM6.002 21.5H13v6.793l-7 7L6.002 21.5zm.003-15.629L13 10.535V20.5H6.002l.003-14.629zM27.95 11.05v2.293l-13.9 13.9V11.05h13.9zm6.322-4.029L29 12.293v-1.758l5.272-3.514zM41.854.146c-.196-.195-.512-.195-.708 0l-4.791 4.791c-.113-.043-.234-.07-.358-.07-.185 0-.377.053-.552.169L28 10H14L6.555 5.036c-.175-.116-.367-.169-.552-.169C5.482 4.867 5 5.28 5 5.868v30.264c0 .048.021.087.027.134l-4.881 4.88c-.195.196-.195.512 0 .708.098.097.226.146.354.146.128 0 .256-.049.354-.146l4.791-4.792c.113.044.234.071.358.071.185 0 .377-.053.552-.169L14 32h14l7.445 4.964c.175.116.367.169.552.169.521 0 1.003-.413 1.003-1.001V5.868c0-.048-.021-.087-.027-.134l4.881-4.88c.195-.196.195-.512 0-.708z" mask="url(#prefix__b)"/>
                    </g>
                </svg>""",
            "Close your windows to avoid dirty outdoor air",
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <g fill="none">
                        <path d="M0 42L42 42 42 0 0 0z"/>
                        <path fill="#DA3740" d="M34.111 20.13c.422-1.362 1.19-4.671 1.25-4.91.947-3.69 1.773-6.876 3.314-6.604.53.093.832.597.901 1.497.216 2.87-2.149 8.21-5.465 10.018M21.001 34c-5.99 0-11.039-8.672-12.973-17.194 3.021-.513 5.352-2.036 7.434-3.4C17.437 12.116 19.142 11 21 11c1.857 0 3.562 1.115 5.538 2.407 2.082 1.363 4.412 2.886 7.433 3.399C32.038 25.328 26.99 34 21.001 34M2.423 10.113c.068-.9.371-1.404.9-1.496 1.551-.286 2.367 2.914 3.314 6.604.061.238.828 3.547 1.25 4.91-3.316-1.808-5.68-7.147-5.464-10.018m38.148-.076c-.14-1.853-1.14-2.302-1.724-2.406-2.455-.431-3.34 2.999-4.456 7.342-.07.276-.145.563-.219.846-5.686-.95-8.878-5.82-13.173-5.82s-7.488 4.87-13.174 5.82c-.073-.283-.149-.57-.219-.846C6.492 10.629 5.614 7.2 3.15 7.63c-.583.104-1.583.553-1.723 2.406-.26 3.458 2.707 9.865 6.872 11.376C10.925 28.979 15.627 35 21 35s10.074-6.021 12.7-13.587c4.165-1.511 7.134-7.918 6.872-11.376"/>
                        <path fill="#DA3740" d="M26.307 19.006H15.694c-.278 0-.5.224-.5.5s.222.5.5.5h10.613c.277 0 .5-.224.5-.5s-.223-.5-.5-.5M26.307 22.287H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5M26.307 25.568H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5"/>
                    </g>
                </svg>""",
            "Wear a mask outdoors",
        ]
    elif bucket == "VERY POOR":
        return [
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <defs>
                        <path id="prefix__a" d="M0 0L42 0 42 42 0 42z"/>
                    </defs>
                    <g fill="none" fill-rule="evenodd">
                        <path d="M0 0H42V42H0z"/>
                        <mask id="prefix__b" fill="#fff">
                            <use xlink:href="#prefix__a"/>
                        </mask>
                        <path fill="#DA3740" d="M36 20.5h-7v-6.793l7-7V20.5zm0 15.632l-7-4.667V21.5h7v14.632zM14.05 30.95v-2.293l13.9-13.9V30.95h-13.9zm-6.323 4.03L13 29.707v1.758L7.727 34.98zM6.002 21.5H13v6.793l-7 7L6.002 21.5zm.003-15.629L13 10.535V20.5H6.002l.003-14.629zM27.95 11.05v2.293l-13.9 13.9V11.05h13.9zm6.322-4.029L29 12.293v-1.758l5.272-3.514zM41.854.146c-.196-.195-.512-.195-.708 0l-4.791 4.791c-.113-.043-.234-.07-.358-.07-.185 0-.377.053-.552.169L28 10H14L6.555 5.036c-.175-.116-.367-.169-.552-.169C5.482 4.867 5 5.28 5 5.868v30.264c0 .048.021.087.027.134l-4.881 4.88c-.195.196-.195.512 0 .708.098.097.226.146.354.146.128 0 .256-.049.354-.146l4.791-4.792c.113.044.234.071.358.071.185 0 .377-.053.552-.169L14 32h14l7.445 4.964c.175.116.367.169.552.169.521 0 1.003-.413 1.003-1.001V5.868c0-.048-.021-.087-.027-.134l4.881-4.88c.195-.196.195-.512 0-.708z" mask="url(#prefix__b)"/>
                    </g>
                </svg>""",
            "Close your windows to avoid dirty outdoor air",
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <g fill="none">
                        <path d="M0 42L42 42 42 0 0 0z"/>
                        <path fill="#DA3740" d="M34.111 20.13c.422-1.362 1.19-4.671 1.25-4.91.947-3.69 1.773-6.876 3.314-6.604.53.093.832.597.901 1.497.216 2.87-2.149 8.21-5.465 10.018M21.001 34c-5.99 0-11.039-8.672-12.973-17.194 3.021-.513 5.352-2.036 7.434-3.4C17.437 12.116 19.142 11 21 11c1.857 0 3.562 1.115 5.538 2.407 2.082 1.363 4.412 2.886 7.433 3.399C32.038 25.328 26.99 34 21.001 34M2.423 10.113c.068-.9.371-1.404.9-1.496 1.551-.286 2.367 2.914 3.314 6.604.061.238.828 3.547 1.25 4.91-3.316-1.808-5.68-7.147-5.464-10.018m38.148-.076c-.14-1.853-1.14-2.302-1.724-2.406-2.455-.431-3.34 2.999-4.456 7.342-.07.276-.145.563-.219.846-5.686-.95-8.878-5.82-13.173-5.82s-7.488 4.87-13.174 5.82c-.073-.283-.149-.57-.219-.846C6.492 10.629 5.614 7.2 3.15 7.63c-.583.104-1.583.553-1.723 2.406-.26 3.458 2.707 9.865 6.872 11.376C10.925 28.979 15.627 35 21 35s10.074-6.021 12.7-13.587c4.165-1.511 7.134-7.918 6.872-11.376"/>
                        <path fill="#DA3740" d="M26.307 19.006H15.694c-.278 0-.5.224-.5.5s.222.5.5.5h10.613c.277 0 .5-.224.5-.5s-.223-.5-.5-.5M26.307 22.287H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5M26.307 25.568H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5"/>
                    </g>
                </svg>""",
            "Wear a mask outdoors",
        ]
    else:
        return [
            """<svg width="42" height="42" viewBox="0 0 42 42">
                    <g fill="none">
                        <path d="M0 42L42 42 42 0 0 0z"/>
                        <path fill="#DA3740" d="M34.111 20.13c.422-1.362 1.19-4.671 1.25-4.91.947-3.69 1.773-6.876 3.314-6.604.53.093.832.597.901 1.497.216 2.87-2.149 8.21-5.465 10.018M21.001 34c-5.99 0-11.039-8.672-12.973-17.194 3.021-.513 5.352-2.036 7.434-3.4C17.437 12.116 19.142 11 21 11c1.857 0 3.562 1.115 5.538 2.407 2.082 1.363 4.412 2.886 7.433 3.399C32.038 25.328 26.99 34 21.001 34M2.423 10.113c.068-.9.371-1.404.9-1.496 1.551-.286 2.367 2.914 3.314 6.604.061.238.828 3.547 1.25 4.91-3.316-1.808-5.68-7.147-5.464-10.018m38.148-.076c-.14-1.853-1.14-2.302-1.724-2.406-2.455-.431-3.34 2.999-4.456 7.342-.07.276-.145.563-.219.846-5.686-.95-8.878-5.82-13.173-5.82s-7.488 4.87-13.174 5.82c-.073-.283-.149-.57-.219-.846C6.492 10.629 5.614 7.2 3.15 7.63c-.583.104-1.583.553-1.723 2.406-.26 3.458 2.707 9.865 6.872 11.376C10.925 28.979 15.627 35 21 35s10.074-6.021 12.7-13.587c4.165-1.511 7.134-7.918 6.872-11.376"/>
                        <path fill="#DA3740" d="M26.307 19.006H15.694c-.278 0-.5.224-.5.5s.222.5.5.5h10.613c.277 0 .5-.224.5-.5s-.223-.5-.5-.5M26.307 22.287H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5M26.307 25.568H15.694c-.278 0-.5.223-.5.5 0 .275.222.5.5.5h10.613c.277 0 .5-.225.5-.5 0-.277-.223-.5-.5-.5"/>
                    </g>
                </svg>""",
            "Wear a mask outdoors",
            """<svg  width="42" height="42" viewBox="0 0 42 42">
                    <g fill="#DA3740" fill-rule="evenodd">
                        <path d="M31.5 36.25c-3.584 0-6.5-2.916-6.5-6.5s2.916-6.5 6.5-6.5 6.5 2.916 6.5 6.5-2.916 6.5-6.5 6.5m0-14c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5 7.5-3.357 7.5-7.5-3.357-7.5-7.5-7.5"/>
                        <path d="M30.795 33.18c-1.482-.305-2.596-1.518-2.771-3.02-.032-.273-.278-.472-.555-.437-.274.032-.471.28-.438.555.225 1.93 1.658 3.49 3.563 3.88.033.008.067.01.1.01.233 0 .44-.162.49-.398.055-.271-.12-.535-.39-.59M14.02 19.287c-.226-.12-.322-.385-.23-.63 1.363-3.663 5.686-7.93 9.43-8.158.245-.015.444.142.508.368l1.487 5.21-5.99 5.99-5.206-2.78zm15.168-8.059c-1.378 0-2.5-1.12-2.5-2.5 0-1.378 1.122-2.5 2.5-2.5 1.379 0 2.5 1.122 2.5 2.5 0 .435-.121.837-.316 1.194l-.991.99c-.357.195-.759.316-1.194.316zM17 29.75c0 3.584-2.916 6.5-6.5 6.5-1.162 0-2.252-.31-3.197-.847l1.494-1.493c.255.104.52.191.796.248.034.008.069.011.101.011.232 0 .44-.163.49-.4.056-.27-.12-.535-.39-.589-.072-.015-.136-.04-.207-.06l6.567-6.566c.535.945.846 2.034.846 3.196zm-13 0c0-3.584 2.915-6.5 6.5-6.5 2.057 0 3.89.964 5.082 2.46l-6.975 6.975c-.86-.553-1.458-1.462-1.583-2.524-.032-.274-.274-.474-.556-.438-.272.032-.47.28-.436.554.15 1.291.846 2.406 1.856 3.127l-1.428 1.43C4.963 33.64 4 31.807 4 29.75zM41.852.146c-.195-.195-.511-.195-.706 0l-8.47 8.47c-.062-1.876-1.598-3.388-3.49-3.388-1.93 0-3.5 1.571-3.5 3.5 0 1.892 1.512 3.428 3.389 3.49l-3.05 3.05-1.337-4.676c-.192-.675-.838-1.129-1.53-1.09-4.116.25-8.836 4.855-10.307 8.806-.264.708.037 1.508.697 1.86l4.939 2.638-2.19 2.188c-1.375-1.675-3.461-2.744-5.798-2.744-4.143 0-7.5 3.357-7.5 7.5 0 2.337 1.07 4.423 2.745 5.8L.146 41.145c-.194.196-.194.512 0 .707.099.098.227.147.353.147.128 0 .256-.049.355-.147l5.721-5.72c1.143.704 2.484 1.117 3.924 1.117 4.143 0 7.5-3.358 7.5-7.5 0-1.442-.412-2.782-1.117-3.925l2.526-2.526 1.822.972c.2.107.3.328.247.552l-1.4 5.988c-.064.27.104.54.373.601.038.01.078.014.114.014.227 0 .433-.157.486-.387l1.4-5.988c.155-.66-.153-1.344-.748-1.662l-1.555-.83 5.538-5.537c.277.288.652.478 1.069.478h6.756c.276 0 .5-.224.5-.5s-.224-.5-.5-.5h-6.756c-.148 0-.267-.08-.36-.188l4.604-4.602c.479-.292.878-.693 1.17-1.172L41.854.853c.195-.195.195-.51 0-.707z"/>
                    </g>
                </svg>""",
            "Close your windows and Avoid outdoor exercise",
        ]


def hour_minute_format(x):
    ts = x.total_seconds()
    hours, remainder = divmod(ts, 3600)
    minutes, seconds = divmod(remainder, 60)
    return ("{:02d}:{:02d}").format(int(hours), int(minutes))


def get_rgb(bucket):
    if bucket == "GOOD":
        return [133, 239, 71]
    elif bucket == "SATISFACTORY":
        return [0, 189, 86]
    elif bucket == "MODERATE":
        return [255, 195, 0]
    elif bucket == "POOR":
        return [232, 99, 10]
    elif bucket == "VERY POOR":
        return [255, 23, 0]
    else:
        return [123, 17, 58]


def PM25_color(x):
    if x <= 30:
        return "GOOD"
    elif x <= 60:
        return "SATISFACTORY"
    elif x <= 90:
        return "MODERATE"
    elif x <= 120:
        return "POOR"
    elif x <= 250:
        return "VERY POOR"
    else:
        return "SEVERE"


def PM10_color(x):
    if x <= 50:
        return "GOOD"
    elif x <= 100:
        return "SATISFACTORY"
    elif x <= 250:
        return "MODERATE"
    elif x <= 350:
        return "POOR"
    elif x <= 430:
        return "VERY POOR"
    else:
        return "SEVERE"


def NO2_color(x):
    if x <= 40:
        return "GOOD"
    elif x <= 80:
        return "SATISFACTORY"
    elif x <= 180:
        return "MODERATE"
    elif x <= 280:
        return "POOR"
    elif x <= 400:
        return "VERY POOR"
    else:
        return "SEVERE"


def SO2_color(x):
    if x <= 40:
        return "GOOD"
    elif x <= 80:
        return "SATISFACTORY"
    elif x <= 380:
        return "MODERATE"
    elif x <= 800:
        return "POOR"
    elif x <= 1600:
        return "VERY POOR"
    else:
        return "SEVERE"


def CO_color(x):
    if x <= 1.0:
        return "GOOD"
    elif x <= 2.0:
        return "SATISFACTORY"
    elif x <= 10:
        return "MODERATE"
    elif x <= 17:
        return "POOR"
    elif x <= 34:
        return "VERY POOR"
    else:
        return "SEVERE"


def O3_color(x):
    if x <= 50:
        return "GOOD"
    elif x <= 100:
        return "SATISFACTORY"
    elif x <= 168:
        return "MODERATE"
    elif x <= 208:
        return "POOR"
    elif x <= 748:
        return "VERY POOR"
    else:
        return "SEVERE"


#################################################
df = load_table("2020-2022_history_data_processed.parquet.brotli")
df["Date"] = pd.to_datetime(df["Date"]).dt.date

page_header = f"""
                <div style="width: 100%;height: 100px;background-repeat: no-repeat;background-position: center center;
                            background-size: cover;opacity: 1;position: relative;top: 0px;left: 0px;overflow: hidden;">
                    <div style="width: 100%;height: 80px;background: #9254C8;opacity: 1;position: relative;
                                top: 0px;left: 0px;border-top-left-radius: 3px;border-top-right-radius: 3px;
                                border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;overflow: hidden;">
                    </div>
                    <div style="width: 80px;height: 80px;opacity: 1;position: absolute;
                                top: 0px;left: 0px;border-top-left-radius: 3px;border-top-right-radius: 3px;
                                border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;overflow: hidden;">
                        <img src="https://img.icons8.com/color/344/india-circular.png" alt="image" width="80%" height="80%" style="top: 10px;left:5px;position: absolute;">
                    </div>
                    <span style="width: 15%;color: rgba(255,255,255,1);position: absolute;top: 0px;left: 7%;
                                font-weight:normal;font-size: 36px;opacity: 1;
                                text-align: center;">INDIA's AQI
                    </span>
                    <span style="width: 25%;color: rgba(255,255,255,1);position: absolute;top: 50px;left: 2%;
                                font-weight:normal;font-size: 16px;opacity: 1;
                                text-align: center;">Analysis and Forecasting
                    </span>
                </div>"""
st.markdown(page_header, unsafe_allow_html=True)

### Variables###################################################
station = df.Station.unique()
color_value = {
    "GOOD": "#85EF47",
    "SATISFACTORY": "#00BD56",
    "MODERATE": "#ffc300",
    "POOR": "#E8630A",
    "VERY POOR": "#FF1700",
    "SEVERE": "#7B113A",
}

#################################################################
col1, col2 = st.columns(2)

with col1:
    select_station = st.selectbox("Select a Station", station)

with col2:
    select_date = st.date_input(
        "Select a date",
        datetime.date(2022, 2, 9),
        min_value=datetime.date(2020, 11, 28),
        max_value=datetime.date(2022, 2, 9),
    )

######################################################
grouped = df.groupby(["Station", "Date"]).mean().reset_index()
grouped_mask = (grouped["Date"] == select_date) & (grouped["Station"] == select_station)
ddf = grouped.loc[grouped_mask]
ddf["AQI_bucket"] = ddf["AQI"].apply(lambda x: get_AQI_bucket(x))
ddf["PM25_bucket"] = ddf["PM25"].apply(lambda x: PM25_color(x))
ddf["PM10_bucket"] = ddf["PM10"].apply(lambda x: PM10_color(x))
ddf["NO2_bucket"] = ddf["NO2"].apply(lambda x: NO2_color(x))
ddf["SO2_bucket"] = ddf["SO2"].apply(lambda x: SO2_color(x))
ddf["CO_bucket"] = ddf["CO"].apply(lambda x: CO_color(x))
ddf["O3_bucket"] = ddf["O3"].apply(lambda x: O3_color(x))  # data for detailed card


mask = (df["Date"] == select_date) & (df["Station"] == select_station)
station_df = df.loc[mask]  # data for hourly AQI per day
station_df["Time"] = pd.to_timedelta(station_df["Time"]).apply(hour_minute_format)

##### HTML##########################
station_page = f"""
<html>

<head>
    <link href="https://fonts.googleapis.com/css?family=Montserrat&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Inter&display=swap" rel="stylesheet" />
    <style></style>
</head>


<body>
    <div class="v26_5">
        <div class="v26_3"></div>
        <div class="v45_103">
            <div class="v30_41"></div><span class="v34_72">How to protect yourself from air pollution?</span>
            <div class="v45_102">
                <div class="v34_75">{get_suggestions(ddf["AQI_bucket"].iloc[0])[0]}
                </div><span class="v34_76">{get_suggestions(ddf["AQI_bucket"].iloc[0])[1]}</span>
            </div>
            <div class="v45_101">
                <div class="v34_73">{get_suggestions(ddf["AQI_bucket"].iloc[0])[2]}
                </div><span class="v34_77">{get_suggestions(ddf["AQI_bucket"].iloc[0])[3]}</span>
            </div>
        </div>
        <div class="v34_88">
            <div class="v29_17"></div>
            <div class="v45_95">
                <div style="        
                width: 256px;
                height: 8px;
                background: {color_value.get(ddf["PM25_bucket"].iloc[0])};
                opacity: 0.2;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div>
                <div style="        
                width: {get_length(ddf["PM25_bucket"].iloc[0])}px;
                height: 8px;
                background: {color_value.get(ddf["PM25_bucket"].iloc[0])};
                opacity: 1;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div><span class="v30_21">PM 2.5</span><span class="v30_25">{ddf.PM25.iloc[0]:.1f}</span><span
                    class="v30_29">ug/m3</span>
            </div>
            <div class="v45_96">
                <div style="        
                width: 256px;
                height: 8px;
                background: {color_value.get(ddf["PM10_bucket"].iloc[0])};
                opacity: 0.2;
                position: absolute;
                top: 7px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div>
                <div style="        
                width: {get_length(ddf["PM10_bucket"].iloc[0])}px;
                height: 8px;
                background: {color_value.get(ddf["PM10_bucket"].iloc[0])};
                opacity: 1;
                position: absolute;
                top: 7px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div><span class="v30_22">PM 10</span><span class="v30_26">{ddf.PM10.iloc[0]:.1f}</span><span
                    class="v30_30">ug/m3</span>
            </div>
            <div class="v45_97">
                <div style="        
                width: 256px;
                height: 8px;
                background: {color_value.get(ddf["SO2_bucket"].iloc[0])};
                opacity: 0.2;
                position: absolute;
                top: 6px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div>
                <div style="        
                width: {get_length(ddf["SO2_bucket"].iloc[0])}px;
                height: 8px;
                background: {color_value.get(ddf["SO2_bucket"].iloc[0])};
                opacity: 1;
                position: absolute;
                top: 6px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div><span class="v30_23">SO2</span><span class="v30_27">{ddf.SO2.iloc[0]:.1f}</span><span
                    class="v30_31">ug/m3</span>
            </div>
            <div class="v45_98">
                <div style="        
                width: 256px;
                height: 8px;
                background: {color_value.get(ddf["CO_bucket"].iloc[0])};
                opacity: 0.2;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div>
                <div style="        
                width: {get_length(ddf["CO_bucket"].iloc[0])}px;
                height: 8px;
                background: {color_value.get(ddf["CO_bucket"].iloc[0])};
                opacity: 1;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div><span class="v30_24">CO</span><span class="v30_28">{ddf.CO.iloc[0]:.1f}</span><span
                    class="v30_32">mg/m3</span>
            </div>
            <div class="v45_99">
                <div style="        
                width: 256px;
                height: 8px;
                background: {color_value.get(ddf["NO2_bucket"].iloc[0])};
                opacity: 0.2;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div>
                <div style="        
                width: {get_length(ddf["NO2_bucket"].iloc[0])}px;
                height: 8px;
                background: {color_value.get(ddf["NO2_bucket"].iloc[0])};
                opacity: 1;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div><span class="v30_48">NO2</span><span class="v30_49">{ddf.NO2.iloc[0]:.1f}</span><span
                    class="v30_50">ppb</span>
            </div>
            <div class="v45_100">
                <div style="        
                width: 256px;
                height: 8px;
                background: {color_value.get(ddf["O3_bucket"].iloc[0])};
                opacity: 0.2;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div>
                <div style="        
                width: {get_length(ddf["O3_bucket"].iloc[0])}px;
                height: 8px;
                background: {color_value.get(ddf["O3_bucket"].iloc[0])};
                opacity: 1;
                position: absolute;
                top: 5px;
                left: 82px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;
                overflow: hidden;"></div><span class="v30_57">O3</span><span class="v30_58">{ddf.O3.iloc[0]:.1f}</span><span
                    class="v30_59">ug/m³</span>
            </div>
            <div class="v45_94"><span class="v30_19">Pollutants</span><span class="v30_20">Concentrations</span></div>
        </div><span class="v26_11">{select_station}</span>
        <div class="v34_90">
            <div style="        
            width: 572px;
            height: 115px;
            background: {color_value.get(ddf["AQI_bucket"].iloc[0])};
            opacity: 0.6;
            position: relative;
            top: 0px;
            left: 0px;
            border-top-left-radius: 6px;
            border-top-right-radius: 6px;
            overflow: hidden;"></div>
            <div class="v26_4"></div>
            <div class="v34_79">
            <span style="        
            width: 218px;
            color: rgba(23, 24, 28, 1);
            position: absolute;
            top: 36px;
            left: 0px;
            font-family: Inter;
            font-weight: Medium;
            font-size: 28px;
            opacity: 1;
            text-align: left;">{ddf["AQI_bucket"].iloc[0]}</span>
            <span style="        
            width: 138px;
            color: rgba(23, 24, 28, 1);
            position: absolute;
            top: 0px;
            left: 0px;
            font-family: Inter;
            font-weight: Bold;
            font-size: 15px;
            opacity: 1;
            text-align: left;">{select_date}</span></div>
            <div class="v29_16">{get_icon(ddf["AQI_bucket"].iloc[0])}
            </div>
            <div class="v34_78">
                <div style="        
                width: 108px;
                height: 85px;
                background: {color_value.get(ddf["AQI_bucket"].iloc[0])};
                opacity: 1;
                position: relative;
                top: 0px;
                left: 0px;
                border-top-left-radius: 4px;
                border-top-right-radius: 4px;
                border-bottom-left-radius: 4px;
                border-bottom-right-radius: 4px;
        overflow: hidden;"></div><span class="v26_10">{int(ddf.AQI.iloc[0])}</span><span class="v29_13">AQI</span>
            </div>
        </div>
    </div>
</body>

</html>
"""
with open("htmls/station_css.html", "r") as f:
    station_css = f.read()


station_details_page = station_page.replace("<style></style>", station_css)
########################################################3####
with col1:
    st.markdown(station_details_page, unsafe_allow_html=True)

with col2:
    ###########################################3
    # daily AQI data
    # #########################################
    fig = px.bar(
        data_frame=station_df,
        x="Time",
        y="AQI",
        # markers=True,
        color=f"AQI_bucket",
        color_discrete_map={
            "Good": "#85EF47",
            "Satisfactory": "#00BD56",
            "Moderate": "#ffc300",
            "Poor": "#E8630A",
            "Very Poor": "#FF1700",
            "Severe": "#7B113A",
        },
        template="plotly_dark",
    )
    fig.update_layout(
        autosize=False,
        width=575,
        height=275,
        title={
            "text": f"{select_station}<br> Hourly AQI on {select_date}",
            "x": 0.5,
            "xanchor": "center",
        },
        paper_bgcolor="rgb(38,39,48)",
        # plot_bgcolor="rgb(14,17,23)",
        yaxis_title=None,
        xaxis_title=None,
        margin=dict(
            l=10,  # left
            r=10,  # right
            t=60,  # top
            b=10,  # bottom
        ),
        bargap=0.6,
        showlegend=False,
        hoverlabel=dict(
            bgcolor="#1c1d24",
            font_color="white",
            font_size=12,
        ),
    )
    fig.update_xaxes(
        showgrid=False,
    )
    fig.update_yaxes(
        showgrid=False,
    )

    config = {"displayModeBar": False}
    st.plotly_chart(fig, config=config)  ##### Hourly Data figure
    ###########################################3
    # forecast
    # #########################################
    all_dates = pd.date_range(start="2022-02-10", end="2022-02-16", freq="D")
    # create empty dataframe
    score_df = pd.DataFrame()
    # add columns to dataset
    score_df["Date"] = all_dates
    score_df["month"] = [i.month for i in score_df["Date"]]
    score_df["year"] = [i.year for i in score_df["Date"]]
    score_df["day_of_week"] = [i.dayofweek for i in score_df["Date"]]
    score_df["day_of_year"] = [i.dayofyear for i in score_df["Date"]]
    final_forecast = score_df.copy()
    final_forecast.drop(
        columns=["month", "year", "day_of_week", "day_of_year"], inplace=True
    )
    l = load_model(
        "trained_station_models/"
        + str(select_station),
        verbose=False,
    )
    forecast = predict_model(l, data=score_df)
    forecast.rename(columns={"Label": "AQI"}, inplace=True)
    forecast.drop(columns=["month", "year", "day_of_week", "day_of_year"], inplace=True)

    forecast_fig = px.line(
        data_frame=forecast,
        x="Date",
        y="AQI",
        markers=True,
        template="plotly_dark",
    )
    forecast_fig.update_layout(
        autosize=False,
        width=575,
        height=275,
        title={
            "text": f"AQI Forecast <br> {select_station}",
            "x": 0.5,
            "xanchor": "center",
        },
        paper_bgcolor="rgb(38,39,48)",
        # plot_bgcolor="rgb(14,17,23)",
        yaxis_title=None,
        xaxis_title=None,
        margin=dict(
            l=10,  # left
            r=10,  # right
            t=50,  # top
            b=10,  # bottom
        ),
        hoverlabel=dict(
            bgcolor="#1c1d24",
            font_color="white",
            font_size=12,
        ),
    )
    forecast_fig.update_xaxes(
        showgrid=False,
    )
    forecast_fig.update_yaxes(
        showgrid=False,
    )
    forecast_config = {"displayModeBar": False}
    st.plotly_chart(forecast_fig, config=forecast_config)
##########################################################
## Top 10 city by AQI Ranking
##########################################################
grp = df.groupby(["City", "State", "Date"]).mean().reset_index()
mask2 = grp["Date"] == select_date
city_df = grp.loc[mask2]
city_df["city_state"] = city_df["City"] + ", " + city_df["State"]
city_df = city_df[["city_state", "Date", "AQI"]]
city_df["AQI"] = city_df["AQI"].astype(int)
city_df["AQI_bucket"] = city_df["AQI"].apply(lambda x: get_AQI_bucket(x))
city_df = city_df.sort_values("AQI", ascending=False).reset_index(drop=True).iloc[:10]

top_city_page = f"""
<html>

<head>
    <link href="https://fonts.googleapis.com/css?family=Montserrat&display=swap" rel="stylesheet" />
    <style></style>
</head>

<body>
    <div class="v56_64">
        <div class="v55_17"></div><span class="v55_4">City Ranking by AQI on {select_date}</span>
        <div class="v56_52"><span class="v55_5">#</span><span class="v55_6">CITY</span><span class="v55_7">AQI</span>
        </div>
        <div class="v56_53"><span class="v55_8">1</span><span class="v55_20">{city_df['city_state'].iloc[0]}
            </span>
            <div style="        
                width: 55px;
                height: 23px;
                background:  {color_value.get(city_df["AQI_bucket"].iloc[0])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v55_42">{city_df['AQI'].iloc[0]}</span>
        </div>
        <div class="v56_54"><span class="v55_9">2</span><span class="v55_30">{city_df['city_state'].iloc[1]}
            </span>
            <div style="        
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[1])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_43">{city_df['AQI'].iloc[1]}</span>
        </div>
        <div class="v56_55"><span class="v55_10">3</span><span class="v55_22">{city_df['city_state'].iloc[2]}
            </span>
            <div style="        
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[2])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_44">{city_df['AQI'].iloc[2]}</span>
        </div>
        <div class="v56_56"><span class="v55_11">4</span><span class="v55_23">{city_df['city_state'].iloc[3]}
            </span>
            <div style="        
            width: 55px;
            height: 23px;
            background: {color_value.get(city_df["AQI_bucket"].iloc[3])};
            position: absolute;
            top: 4px;
            left: 237px;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
            overflow: hidden;"></div><span class="v56_45">{city_df['AQI'].iloc[3]}</span>
        </div>
        <div class="v56_57"><span class="v55_12">5</span><span class="v55_24">{city_df['city_state'].iloc[4]}
            </span>
            <div style="
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[4])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_46">{city_df['AQI'].iloc[4]}</span>
        </div>
        <div class="v56_58"><span class="v55_13">6</span><span class="v55_25">{city_df['city_state'].iloc[5]}
            </span>
            <div style="            
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[5])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_47">{city_df['AQI'].iloc[5]}</span>
        </div>
        <div class="v56_59"><span class="v55_14">7</span><span class="v55_26">{city_df['city_state'].iloc[6]}
            </span>
            <div style="            
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[6])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_48">{city_df['AQI'].iloc[6]}</span>
        </div>
        <div class="v56_61"><span class="v55_15">8</span><span class="v55_27">{city_df['city_state'].iloc[7]}
            </span>
            <div style="            
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[7])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_49">{city_df['AQI'].iloc[7]}</span>
        </div>
        <div class="v56_62"><span class="v55_16">9</span><span class="v55_28">{city_df['city_state'].iloc[8]}
            </span>
            <div style="            
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[8])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_50">{city_df['AQI'].iloc[8]}</span>
        </div>
        <div class="v56_63"><span class="v55_19">10</span><span class="v55_29">{city_df['city_state'].iloc[9]}
            </span>
            <div style="            
                width: 55px;
                height: 23px;
                background: {color_value.get(city_df["AQI_bucket"].iloc[9])};
                position: absolute;
                top: 4px;
                left: 237px;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                border-bottom-left-radius: 5px;
                border-bottom-right-radius: 5px;
                overflow: hidden;">
            </div><span class="v56_51">{city_df['AQI'].iloc[9]}</span>
        </div>
    </div>
</body>

</html>"""

with open("htmls/city_css.html", "r") as f:
    city_css = f.read()
top_city_page = top_city_page.replace("<style></style>", city_css)

#########################################################
### Monthly aqi chart for history
##########################################################
col3, col4, col5 = st.columns([2.05, 4, 1])
with col3:
    city_header = f"""
                <div style="width: 326px;height: 80px;background-repeat: no-repeat;background-position: center center;
                            background-size: cover;opacity: 1;position: relative;top: 0px;left: 0px;overflow: hidden;">
                    <div style="width: 326px;height: 49px;background: #363062;opacity: 1;position: relative;
                                top: 31px;left: 0px;border-top-left-radius: 3px;border-top-right-radius: 3px;
                                border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;overflow: hidden;">
                    </div>
                    <span style="width: 274px;color: rgba(255,255,255,1);position: absolute;top: 38px;left: 26px;
                                font-weight:normal;font-size: 20px;opacity: 1;
                                text-align: center;">Top 10 City by AQI
                    </span>
                </div>"""
    st.markdown(city_header, unsafe_allow_html=True)
with col5:
    pollutant = st.selectbox("", ["AQI", "PM25", "PM10", "CO", "NO2", "O3", "SO2"])
with col4:
    history_header = f"""
                <div style="width: 650px;height: 80px;background-repeat: no-repeat;background-position: center center;
                            background-size: cover;opacity: 1;position: relative;top: 0px;left: 0px;overflow: hidden;">
                    <div style="width: 650px;height: 49px;background: #363062;opacity: 1;position: relative;
                                top: 31px;left: 0px;border-top-left-radius: 3px;border-top-right-radius: 3px;
                                border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;overflow: hidden;">
                    </div>
                    <span style="width: 400px;color: rgba(255,255,255,1);position: absolute;top: 38px;left: 150px;
                                font-weight:normal;font-size: 20px;opacity: 1;
                                text-align: center;">Historic Data (Past 30 days) before {select_date}
                    </span>
                </div>"""

    st.markdown(history_header, unsafe_allow_html=True)

data = df.groupby(["Station", "Date"]).mean().reset_index()
thirty_days_ago = select_date - timedelta(days=30)

station_history = data[
    (data["Date"] > thirty_days_ago)
    & (data["Date"] <= select_date)
    & (data["Station"] == select_station)
]

station_history["AQI"] = station_history["AQI"].astype(int)
station_history["AQI_bucket"] = station_history["AQI"].apply(
    lambda x: get_AQI_bucket(x)
)
station_history["PM25_bucket"] = station_history["PM25"].apply(lambda x: PM25_color(x))
station_history["PM10_bucket"] = station_history["PM10"].apply(lambda x: PM10_color(x))
station_history["NO2_bucket"] = station_history["NO2"].apply(lambda x: NO2_color(x))
station_history["SO2_bucket"] = station_history["SO2"].apply(lambda x: SO2_color(x))
station_history["CO_bucket"] = station_history["CO"].apply(lambda x: CO_color(x))
station_history["O3_bucket"] = station_history["O3"].apply(lambda x: O3_color(x))

history_fig = px.bar(
    data_frame=station_history,
    x="Date",
    y=pollutant,
    color=f"{pollutant}_bucket",
    color_discrete_map={
        "GOOD": "#85EF47",
        "SATISFACTORY": "#00BD56",
        "MODERATE": "#FFF323",
        "POOR": "#F37121",
        "VERY POOR": "#FF0000",
        "SEVERE": "#AF0404",
    },
    template="plotly_dark",
)

history_fig.update_layout(
    autosize=False,
    width=820,
    height=471,
    title={
        "text": f"{select_station} Daily {pollutant}",
        "x": 0.5,
        "xanchor": "center",
    },
    paper_bgcolor="rgb(38,39,48)",
    # plot_bgcolor="rgb(14,17,23)",
    showlegend=False,
    margin=dict(
        l=10,  # left
        r=10,  # right
        t=50,  # top
        b=10,  # bottom
    ),
    yaxis_title=None,
    xaxis_title=None,
    bargap=0.5,
    hoverlabel=dict(
        bgcolor="#1c1d24",
        font_color="white",
        font_size=12,
    ),
)

history_fig.update_xaxes(
    showgrid=False,
    title_font=dict(size=18),
)

history_fig.update_yaxes(
    showgrid=False,
    title_font=dict(size=18),
)

history_config = {"displayModeBar": False}

col6, col7, col8 = st.columns([1, 1, 5])

with col6:
    st.markdown(top_city_page, unsafe_allow_html=True)
with col8:
    st.plotly_chart(history_fig, config=history_config)

#########################################################################
## Map
#########################################################################

map_df = df.groupby(["Station", "latitude", "longitude", "Date"]).mean().reset_index()
map_df = map_df[map_df["Date"] == select_date].reset_index(drop=True)[
    ["Station", "longitude", "latitude", "AQI", "PM25", "PM10", "CO", "NO2"]
]
map_df["AQI"] = map_df["AQI"].astype(int)
map_df[["PM25", "PM10", "CO", "NO2"]] = map_df[["PM25", "PM10", "CO", "NO2"]].round(
    decimals=1
)
map_df["Station"] = map_df["Station"].astype(str)
map_df["AQI_bucket"] = map_df["AQI"].apply(lambda x: get_AQI_bucket(x))
map_df["emoji"] = map_df["AQI"].apply(lambda x: get_image(x))
map_df["r"] = map_df["AQI_bucket"].apply(lambda x: get_rgb(x)[0])
map_df["g"] = map_df["AQI_bucket"].apply(lambda x: get_rgb(x)[1])
map_df["b"] = map_df["AQI_bucket"].apply(lambda x: get_rgb(x)[2])

with open("htmls/card.html", "r") as f:
    card_html = f.read()

map_header = f"""
                <div style="width: 100%;height: 80px;background-repeat: no-repeat;background-position: center center;
                            background-size: cover;opacity: 1;position: relative;top: 0px;left: 0px;overflow: hidden;">
                    <div style="width: 100%;height: 49px;background: #363062;opacity: 1;position: relative;
                                top: 0px;left: 0px;border-top-left-radius: 3px;border-top-right-radius: 3px;
                                border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;overflow: hidden;">
                    </div>
                    <span style="width: 50%;color: rgba(255,255,255,1);position: absolute;top: 8px;left: 25%;
                                font-weight:normal;font-size: 24px;opacity: 1;
                                text-align: center;">All India AQI Map on {select_date}
                    </span>
                </div>"""
st.markdown(map_header, unsafe_allow_html=True)

st.pydeck_chart(
    pdk.Deck(
        width="50%",
        views=[View(type="MapView", controller=True)],
        map_style="dark",
        initial_view_state=pdk.ViewState(
            latitude=26.9006, longitude=75.8253, zoom=5, pitch=50
        ),
        tooltip={
            "html": card_html,
        },
        layers=[
            pdk.Layer(
                "ColumnLayer",
                data=map_df,
                get_position=["longitude", "latitude"],
                get_elevation="AQI",
                elevation_scale=300,
                radius=6000,
                get_fill_color=["r", "g", "b"],
                pickable=True,
                auto_highlight=True,
            ),
            pdk.Layer(
                "ScatterplotLayer",
                data=map_df,
                get_position=["longitude", "latitude"],
                pickable=True,
                opacity=0.8,
                stroked=True,
                get_elevation=[
                    "AQI",
                    "Station",
                    "PM25",
                    "PM10",
                    "CO",
                    "NO2",
                    "AQI_bucket",
                    "emoji",
                ],
                filled=True,
                radius_scale=35,
                radius_min_pixels=2,
                radius_max_pixels=15,
                line_width_min_pixels=1,
                get_radius=600,
                get_fill_color=["r", "g", "b"],
                get_line_color=[0, 0, 0],
            ),
        ],
    )
)

###################################################################
